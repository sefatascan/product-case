version: '3'

services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.10.2
    container_name: elasticsearch
    environment:
      - "discovery.type=single-node"
      - "xpack.security.enabled=false"
    ports:
      - "9200:9200"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9200/_cluster/health?wait_for_status=green&timeout=1s" ]
      interval: 10s
      retries: 5
      timeout: 5s

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      retries: 5
      timeout: 5s

  postgres:
    image: postgres:latest
    container_name: postgres
    restart: always
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: pass
      POSTGRES_DB: product
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U user -d product" ]
      interval: 10s
      retries: 5
      timeout: 5s

  product-etl:
    build: ./product-etl
    container_name: product-etl
    depends_on:
      elasticsearch:
        condition: service_healthy

  product-api:
    build: ./product-api
    container_name: product-api
    ports:
      - "3000:3000"
    depends_on:
      elasticsearch:
        condition: service_healthy
      redis:
        condition: service_healthy
      product-etl:
        condition: service_completed_successfully
      product-config-api:
        condition: service_started

  product-config-api:
    build: ./product-config-api
    container_name: product-resource-api
    ports:
      - "3001:3001"
    depends_on:
      elasticsearch:
        condition: service_healthy
      postgres:
        condition: service_healthy
